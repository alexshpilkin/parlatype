#!/bin/bash

# This script copies all translation files from a Parlatype launchpad download
# to their respective folders in Parlatype.

IMPORT_FILE=launchpad-export.tar.gz
TEMP_DIR=launchpad-temp

echo "Maintenance script to import translations from Launchpad."
echo "Download from https://translations.launchpad.net/parlatype/trunk/+export"
echo "and save as $IMPORT_FILE into this folder."
echo

cd "$(dirname "$0")" || exit 1

# Test for import file
if [ ! -e "$IMPORT_FILE" ]
then
	echo "$IMPORT_FILE not found – quitting now."
	exit 1
fi

# Don't overwrite old files
mkdir $TEMP_DIR 2>&- || {
	echo "Remove folder $TEMP_DIR first – quitting now."
	exit 1
}

while true
do
	echo -n "Continue? [Y|n] "
	read -r result
	if [ "$result" == "n" ]
	then
		exit 1
	fi
	if [ "$result" == "Y" ] || [ "$result" == "y" ] || [ "$result" == "" ]
	then
		break
	fi
done

# Extract all po files (ignore pot files)
echo "Extracting files …"
tar -xvzf $IMPORT_FILE -C $TEMP_DIR --wildcards -- *.po

# Directory structure is
# $TEMP_DIR
#  ├── help
#  ├── libparlatype
#  └── parlatype

# Rename files, remove prepended strings
echo "Renaming files …"

for folder in "$TEMP_DIR"/help "$TEMP_DIR"/libparlatype "$TEMP_DIR"/parlatype
do
	cd "$folder" || exit
	for file in *
	do
		mv "$file" "${file/*parlatype-/}"
	done
	cd - &>/dev/null || exit
done

# Check translations
echo "Checking translations …"
count=0
for file in "$TEMP_DIR"/**/*.po
do
	msgfmt -c "$file" || (( count += 1 ))
done
# There is some unwanted output
rm messages.mo

if (( count > 0 ))
then
	echo "Some translations have errors."
	while true
	do
		echo -n "Dou you want to continue anyway? [y|N] "
		read -r result
		if [ "$result" == "y" ]
		then
			break
		fi
		if [ "$result" == "N" ] || [ "$result" == "n" ] || [ "$result" == "" ]
		then
			exit 1
		fi
	done
fi

compare_files () {
	if [ ! -e "$1" ]
	then
		result="new"
		return
	fi
	if [ "$(diff -y --suppress-common-lines "$1" "$2" | grep -v ^\"X-Generator | grep -c -v ^\"X-Launchpad-Export-Date)" == "0" ]
	then
		result="no-changes"
		return
	fi
	result="some-changes"
}

# Copy files
echo "Copying changed files …"
folder=$TEMP_DIR/help

for file in "$folder"/*
do
	basename=$(basename "$file")
	lang_code=${basename%.po}
	compare_files "../help/$lang_code/$basename" "$file"
	if [ "$result" == "no-changes" ]
	then
		continue
	fi
	mkdir -p help/"$lang_code"
	cp "$file" ../help/"$lang_code"
	echo help/"$lang_code"/"$basename"
done

folder=$TEMP_DIR/libparlatype
for file in "$folder"/*
do
	basename=$(basename "$file")
	compare_files "../libparlatype/po/$basename" "$file"
	if [ "$result" == "no-changes" ]
	then
		continue
	fi
	cp "$file" ../libparlatype/po/
	echo libparlatype/po/"$basename"
done

folder=$TEMP_DIR/parlatype
for file in "$folder"/*
do
	basename=$(basename "$file")
	compare_files "../po/$basename" "$file"
	if [ "$result" == "no-changes" ]
	then
		continue
	fi
	cp "$file" ../po
	echo po/"$basename"
done

echo "Deleting temporary folder …"
rm -r $TEMP_DIR
